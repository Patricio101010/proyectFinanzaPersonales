

---------------------------------
tipo de lenguajes de programacion
---------------------------------
    tipado estático:
        TypeScript es un superconjunto de JavaScript que agrega tipado estático y otras características avanzadas. 
        Con TypeScript, puedes definir los tipos de variables, parámetros de funciones y valores de retorno, 
        lo que permite que el compilador detecte errores de tipo antes de ejecutar el código.

        Ejemplo en TypeScript:
        Copiar código
            let numero: number = 10;
            let texto: string = "Hola";

            numero = "Hola"; // Error: el tipo 'string' no se puede asignar al tipo 'number'

        En este ejemplo, numero está declarado como un número (number) y texto como una cadena de texto (string). 
        Si intentas asignar un valor de un tipo diferente, TypeScript generará un error en tiempo de compilación.

        Aunque TypeScript introduce el tipado estático, una vez que el código TypeScript se compila,
        se convierte en JavaScript puro (sin tipado estático) y puede ejecutarse en cualquier entorno que soporte JavaScript.
        Esto permite que disfrutes de las ventajas del tipado estático durante el desarrollo sin renunciar a la flexibilidad y compatibilidad de JavaScript.

    tipado dinamico:
        El tipado dinámico es una característica de ciertos lenguajes de programación donde el tipo de una variable se determina en tiempo de ejecución, 
        en lugar de en tiempo de compilación. En estos lenguajes, las variables no requieren una declaración de tipo explícita, 
        y pueden cambiar de tipo a medida que el programa se ejecuta.

        JavaScript es un ejemplo típico de un lenguaje de tipado dinámico. Puedes declarar una variable y asignarle un valor de cualquier
        tipo sin necesidad de especificar el tipo de la variable:

        
        Copiar código
            let variable = 42;       // Aquí la variable es un número
            variable = "Hola";       // Ahora la misma variable es una cadena de texto
            variable = true;         // Ahora la variable es un booleano
        
        En el ejemplo anterior, la variable variable cambia su tipo de number a string y luego a boolean durante la ejecución del programa. 
        El lenguaje y el entorno de ejecución se encargan de gestionar estos cambios de tipo.

        Ventajas del Tipado Dinámico:
            Flexibilidad:   
                Puedes cambiar el tipo de una variable en cualquier momento, lo que puede ser útil en situaciones donde 
                no se conoce el tipo de datos con antelación.

            Menos código inicial: 
                No necesitas declarar el tipo de cada variable, lo que puede hacer que el código sea más conciso y fácil de escribir.
        
        Desventajas del Tipado Dinámico:
            Errores en tiempo de ejecución: 
                Los errores de tipo solo se detectan cuando el programa se ejecuta, lo que puede hacer que algunos errores sean más difíciles de detectar y depurar.

            Menos optimización: 
                Los lenguajes de tipado dinámico pueden ser menos eficientes en términos de rendimiento, 
                ya que el entorno de ejecución debe verificar y gestionar los tipos en tiempo real.
        
        En resumen, el tipado dinámico ofrece una gran flexibilidad a costa de la seguridad de tipos, 
        permitiendo que las variables cambien de tipo a lo largo de la ejecución del programa.



---------------------------------

---------------------------------